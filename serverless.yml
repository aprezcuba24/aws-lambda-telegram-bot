service: base-aws-bot-bot
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  stage: ${env:stage}
  iamRoleStatements:
      -
        Effect: 'Allow'
        Action:
          - dynamodb:DescribeTable
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
        Resource:
          'Fn::GetAtt': ['UsersTable', 'Arn']
  environment:
    TELEGRAM_TOKEN: ${env:TELEGRAM_TOKEN}
    REGION: us-east-1
    USER_TABLE: ${self:custom.user_table}

package:
 patterns:
  - '!./**'
  - app/**

custom:
  pythonRequirements:
    dockerizePip: non-linux
  user_table: ${env:stage}_base-aws-bot-bot_users_table

plugins:
  - serverless-python-requirements

functions:
  main:
    handler: app/main.main
    url: true
  reporting:
    handler: app/reporting.main
    events:
     - schedule:
        enabled: false
        rate: rate(1 minute)
        description: This schedule is to calculate the reports and send to a channel.

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.user_table}
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1